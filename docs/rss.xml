<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>muyuii</title><link>https://muyuii.github.io</link><description>祝我好运</description><copyright>muyuii</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://muyuii.github.io/zwhyi.svg</url><title>avatar</title><link>https://muyuii.github.io</link></image><lastBuildDate>Thu, 18 Jul 2024 03:56:03 +0000</lastBuildDate><managingEditor>muyuii</managingEditor><ttl>60</ttl><webMaster>muyuii</webMaster><item><title>【测试基础】缺陷相关概念</title><link>https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-que-xian-xiang-guan-gai-nian.html</link><description>## 缺陷的定义及标准&#13;
定义：&#13;
软件在使用的过程中出现的任何问题&#13;
标准：&#13;
1.软件未实现需求说明书中明确要求的功能——少功能&#13;
2.软件中出现了说明书中指明不应该出现的错误——功能错误&#13;
3.软件实现的功能超出说明书指明的范围——多功能&#13;
4.软件未实现需求说明书中虽未明确要求但应该实现的功能——隐性功能错误&#13;
5.软件难以理解，不易使用，运行缓慢，用户体验不好——不易使用&#13;
## 缺陷产生的原因&#13;
需求：描述不易理解，有歧义、错误等&#13;
设计：设计文档存在错误或缺陷&#13;
编码：代码出现错误&#13;
运行：软硬件系统本身故障导致软件缺陷&#13;
## 缺陷的生命周期&#13;
![image](https://github.com/user-attachments/assets/e0539a53-5b7a-410b-bdef-47278d992797)&#13;
## 缺陷的核心内容&#13;
1.缺陷标题&#13;
2.缺陷的预置条件&#13;
3.缺陷的复现步骤&#13;
4.缺陷的预期结果&#13;
5.缺陷的实际结果&#13;
6.缺陷的必要附件（图片、日志等）&#13;
## 缺陷提交要素&#13;
1.缺陷报告编号&#13;
2.严重程度（s1-s4，主功能、次功能、易用性与界面、建议性问题）&#13;
3.缺陷优先级（priority0-24h内解决、p1-发布前修复、p2可以在下一版本中修复）&#13;
4.bug类型（代码错误、兼容性问题、设计缺陷、性能问题等）&#13;
5.缺陷状态（new-新建、open-打开、close-关闭、postponed-延期）&#13;
## 缺陷类型&#13;
功能错误、界面（UI）错误、兼容性、数据、易用性、改进建议、架构&#13;
## 缺陷标题&#13;
三种思路：&#13;
1、测试数据＋实际结果（预期结果）&#13;
2、测试数据＋预期结果（实际结果）&#13;
3、测试数据＋实际结果（需求）&#13;
## 缺陷管理流程&#13;
![image](https://github.com/user-attachments/assets/1e4da676-894d-4efd-83a9-ad4fa5747787)&#13;
。</description><guid isPermaLink="true">https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-que-xian-xiang-guan-gai-nian.html</guid><pubDate>Mon, 15 Jul 2024 14:03:35 +0000</pubDate></item><item><title>【测试基础】用例设计方法（错误推荐法、冒烟）</title><link>https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-yong-li-she-ji-fang-fa-%EF%BC%88-cuo-wu-tui-jian-fa-%E3%80%81-mao-yan-%EF%BC%89.html</link><description>## 错误推荐法&#13;
定义：通过经验推测系统可能出现的问题&#13;
目的：避免项目不具备可测性，而投入的时间和人力成本&#13;
&#13;
## 冒烟测试&#13;
定义：批量开始测试之前，执行业务正向用例，验证软件是否具备可测性&#13;
场景：&#13;
1、时间紧时根据经验找出易出错模块重点测试&#13;
2、时间宽裕时，用该方法列出之前出现问题较多的模块再次测试&#13;
。</description><guid isPermaLink="true">https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-yong-li-she-ji-fang-fa-%EF%BC%88-cuo-wu-tui-jian-fa-%E3%80%81-mao-yan-%EF%BC%89.html</guid><pubDate>Wed, 10 Jul 2024 15:47:48 +0000</pubDate></item><item><title>【测试基础】用例设计方法（判定表、场景法）</title><link>https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-yong-li-she-ji-fang-fa-%EF%BC%88-pan-ding-biao-%E3%80%81-chang-jing-fa-%EF%BC%89.html</link><description>## 判定表&#13;
条件桩：列出问题中的所有条件&#13;
动作桩：列出问题中可能的操作&#13;
条件项：列出条件对应的取值&#13;
动作项：列出条件项的各种取值应采取的动作结果&#13;
规则数=取值的条件数次方，如n条件，每条件两取值，则有2的n次方&#13;
&#13;
例子：&#13;
![image](https://github.com/muyuii/muyuii.github.io/assets/79619919/a1543906-4acc-47e3-943d-cf60aa5217db)&#13;
&#13;
## 场景法（流程图法）&#13;
![image](https://github.com/muyuii/muyuii.github.io/assets/79619919/1f4b907f-b31e-4bd2-850f-cf2aa7ca157b)&#13;
意义：&#13;
用户使用角度：用户使用的一般不是单功能，而是多功能组合&#13;
测试人员角度：平时测试是单功能测试，容易忽略多功能组合测试&#13;
&#13;
例子：&#13;
&lt;img width='387' alt='image' src='https://github.com/muyuii/muyuii.github.io/assets/79619919/8b64abc1-74db-4a1e-aa05-e018026efd2c'&gt;&#13;
流程图：&#13;
&lt;img width='522' alt='image' src='https://github.com/muyuii/muyuii.github.io/assets/79619919/40d910f6-760e-4610-9360-a44bf614aceb'&gt;&#13;
用例：&#13;
![image](https://github.com/muyuii/muyuii.github.io/assets/79619919/849318ae-204e-48e7-82b5-63d0b6645df6)&#13;
。</description><guid isPermaLink="true">https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-yong-li-she-ji-fang-fa-%EF%BC%88-pan-ding-biao-%E3%80%81-chang-jing-fa-%EF%BC%89.html</guid><pubDate>Tue, 09 Jul 2024 08:52:36 +0000</pubDate></item><item><title>【测试基础】用例设计方法（等价类、边界值）</title><link>https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-yong-li-she-ji-fang-fa-%EF%BC%88-deng-jia-lei-%E3%80%81-bian-jie-zhi-%EF%BC%89.html</link><description>## 等价类划分法&#13;
常用于**输入框、下拉列表、单选复选框**&#13;
**有效等价类**&#13;
**无效等价类**&#13;
从长度、类型、规则考虑&#13;
&#13;
例子：&#13;
账号长度为6-10位数字&#13;
有效等价类：8位数字&#13;
无效等价类：4位数字、8位非数字、12位数字&#13;
&#13;
## 边界值分析法&#13;
选取**正好等于、正好大于、正好小于**边界的值作为测试数据&#13;
上点：边界上的点（正好等于）&#13;
离点：距离上点最近的点（正好大于/小于）&#13;
内点：范围内的点区间（范围内的数据）&#13;
![image](https://github.com/muyuii/muyuii.github.io/assets/79619919/6ffffbf8-dc17-4a2a-8ce9-d2db88944cae)&#13;
步骤：&#13;
1.明确需求&#13;
2.确定有效、无效等价类（针对类型）&#13;
3.确定边界范围值&#13;
4.提取数据编写测试用例&#13;
&#13;
例子：&#13;
&#13;
标题长度要求大于0，小于等于30个字符&#13;
上点：0、30&#13;
离点：-1、1、29、31&#13;
内点：15&#13;
测试用例：&#13;
![image](https://github.com/muyuii/muyuii.github.io/assets/79619919/8e4fe3b7-ed34-4860-985f-469b8a22b6d3)&#13;
&#13;
QQ账号要求6-10位自然数&#13;
![image](https://github.com/muyuii/muyuii.github.io/assets/79619919/2e66e603-e1cf-468a-aa10-8de3a27aee29)&#13;
&#13;
优化：&#13;
必选：上点、内点（验证范围连续性）&#13;
看情况：离点：开內闭外&#13;
&#13;
使用场景&#13;
常见词语：大小、尺寸、重量、最大、至少&#13;
典型代表：有边界范围的输入框。</description><guid isPermaLink="true">https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-yong-li-she-ji-fang-fa-%EF%BC%88-deng-jia-lei-%E3%80%81-bian-jie-zhi-%EF%BC%89.html</guid><pubDate>Fri, 05 Jul 2024 11:01:25 +0000</pubDate></item><item><title>【测试基础】软件测试相关概念</title><link>https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-ruan-jian-ce-shi-xiang-guan-gai-nian.html</link><description>## 软件测试的定义、目的&#13;
**定义：**&#13;
使用技术手段验证软件是否符合使用需求&#13;
**目的：**&#13;
减少软件缺陷，保障软件质量&#13;
## 7种测试分类及区别&#13;
**按阶段：**&#13;
1.单元测试（针对程序源代码）&#13;
2.集成测试（接口/组装测试）&#13;
3.系统测试（功能+非功能）&#13;
4.验收测试（内测、公测）&#13;
**按代码可见度：**&#13;
1.黑盒测试（源代码不可见、UI功能可见/系统测试/功能测试）&#13;
2.灰盒测试（部分源代码可见、功能不可见/接口测试）&#13;
3.白盒测试（代码可见、UI功能不可见/单元测试）&#13;
**其他：**&#13;
性能测试（属专项测试）&#13;
自动化测试（属功能测试）&#13;
## 质量模型重点五项&#13;
**1.功能性&#13;
2.性能&#13;
3.兼容性&#13;
4.易用性&#13;
5.可靠性&#13;
6.安全**&#13;
7.可维护性&#13;
8.可移植性&#13;
## 测试流程6步骤&#13;
1.需求评审&#13;
2.计划编写&#13;
3.用例设计&#13;
4.用例执行&#13;
5.缺陷管理&#13;
6.测试报告&#13;
## 测试模板8要素&#13;
1.用例编号&#13;
2.用例标题&#13;
3.项目/模块&#13;
4.优先级&#13;
5.前置条件&#13;
6.测试步骤&#13;
7.测试数据&#13;
8.预期结果&#13;
## QQ登录测试用例例子&#13;
&lt;img width='798' alt='qq_login' src='https://github.com/muyuii/muyuii.github.io/assets/79619919/7a73f42e-de09-4c28-b4bf-46ed4c133833'&gt;。</description><guid isPermaLink="true">https://muyuii.github.io/post/%E3%80%90-ce-shi-ji-chu-%E3%80%91-ruan-jian-ce-shi-xiang-guan-gai-nian.html</guid><pubDate>Fri, 05 Jul 2024 05:08:38 +0000</pubDate></item></channel></rss>